import { NextResponse } from 'next/server';
import { Parser } from 'json2csv';
import fs from 'fs/promises';

const coordinates = [
    [18.8919, 93.0274],
    [12.3927, 94.4483],
    [9.2649, 82.2508],
    [19.843, 84.1481],
    [20.7735, 74.5723],
    [33.1625, 92.7876],
    [34.1144, 76.5048],
    [34.7424, 77.4973],
    [24.0577, 85.441],
    [24.1049, 89.0676],
    [22.9502, 72.5137],
    [15.6986, 88.2834],
    [14.7783, 75.6074],
    [28.4472, 94.6341],
    [23.4354, 93.3357],
    [22.3344, 89.6158],
    [32.6594, 95.0425],
    [32.824, 80.7379],
    [34.7224, 96.6547],
    [34.3754, 82.6119],
    [21.1803, 88.6313],
    [10.2274, 78.6734],
    [14.1739, 94.6808],
    [18.236, 72.6781],
    [27.4153, 79.6477],
    [14.7824, 94.6486],
    [13.7623, 90.2579],
    [23.1078, 86.7262],
    [23.5851, 80.7452],
    [30.3096, 86.4491],
    [9.2556, 82.8716],
    [15.5805, 85.9918],
    [16.3992, 85.0795],
    [23.8773, 73.7873],
    [20.163, 68.9216],
    [8.4848, 94.6401],
    [34.038, 86.4011],
    [22.573, 71.2858],
    [33.8459, 88.9012],
    [28.9223, 73.8121],
    [21.2306, 87.628],
    [35.3647, 72.1764],
    [34.1036, 82.7053],
    [27.2563, 94.7014],
    [17.1903, 90.0554],
    [17.2569, 92.0739],
    [14.4496, 74.7639],
    [8.5631, 95.9314],
    [19.0655, 78.2871],
    [19.6156, 86.4724],
    [19.1296, 96.6627],
    [11.8662, 78.1726],
    [9.2331, 71.4364],
    [11.0226, 71.3379],
    [18.7218, 70.3002],
    [12.6755, 78.3631],
    [35.6388, 84.0995],
    [36.2411, 83.1185],
    [25.6838, 82.0654],
    [28.2469, 86.6785],
    [18.6844, 71.3574],
    [20.8764, 95.9421],
    [10.0693, 81.7656],
    [22.9034, 92.5244],
    [26.7169, 94.3144],
    [27.4903, 83.5847],
    [36.0508, 79.172],
    [19.9819, 73.7426],
    [13.149, 94.4548],
    [12.3427, 76.2632],
    [32.7472, 81.925],
    [14.2414, 92.085],
    [11.9878, 91.3613],
    [12.2478, 94.0241],
    [25.4547, 86.9705],
    [20.2972, 91.0137],
    [35.5462, 76.7024],
    [35.4893, 92.5162],
    [33.6157, 88.4212],
    [29.7419, 70.0771],
    [26.8635, 75.0854],
    [28.9408, 85.9664],
    [32.2519, 91.646],
    [36.287, 72.2858],
    [15.7066, 75.1879],
    [19.2561, 86.2279],
    [12.5157, 71.2807],
    [14.2715, 76.9715],
    [25.3055, 94.9872],
    [25.755, 93.3936],
    [27.1624, 69.4924],
    [32.6219, 75.7171],
    [31.0928, 88.1933],
    [30.7573, 74.3313],
    [25.6163, 89.5384],
    [22.225, 86.7549],
    [11.5025, 88.4299],
    [9.0806, 74.265],
    [22.6344, 90.5274],
    [29.1743, 95.2574],
    [14.9371, 77.0036],
    [11.965, 88.149],
    [30.6459, 79.1725],
    [18.4567, 92.9248],
    [9.6126, 96.7043],
    [17.7863, 95.5347],
    [30.1308, 86.0685],
    [23.9842, 94.4994],
    [31.9824, 80.3142],
    [31.5294, 68.4796],
    [30.1574, 96.1377],
    [33.1051, 83.0824],
    [33.3521, 93.2373],
    [18.5048, 71.5864],
    [18.418, 75.0682],
    [14.151, 83.455],
    [35.3806, 95.074],
    [31.038, 93.6098],
    [29.3168, 71.814],
    [11.1661, 88.0014],
    [26.2293, 89.3717],
    [25.9132, 73.7841],
    [18.6004, 78.2622],
    [33.4748, 91.9071],
    [16.5023, 92.0808],
    [17.7197, 87.1126],
    [19.2269, 96.7843],
    [23.1919, 79.5315],
    [34.9996, 71.0261],
    [20.5891, 81.0389],
    [16.1832, 68.4332],
    [12.324, 75.5179],
    [15.4695, 94.2147],
    [16.4737, 70.035],
    [11.981, 69.8304],
    [30.5389, 96.5708],
    [8.5949, 72.2418],
    [29.1976, 81.3482],
    [24.2484, 77.176],
    [14.8056, 95.7117],
    [36.8017, 85.9602],
    [8.6403, 80.0545],
    [14.1004, 71.9584],
    [12.7827, 76.143],
    [24.7235, 73.6505],
    [31.7212, 89.1922],
    [33.5354, 85.9824],
    [8.9185, 80.2178],
    [17.0644, 73.2416],
    [25.7959, 96.0173],
    [14.7439, 95.8134],
    [17.6553, 88.5108],
    [25.0662, 74.037],
    [29.5915, 80.4188],
    [11.6276, 80.6436],
    [20.3443, 91.1053],
    [23.1476, 77.256],
    [36.6088, 69.6739],
    [19.7349, 81.4112],
    [11.045, 89.8127],
    [35.141, 81.3374],
    [23.625, 91.2221],
    [35.0458, 91.3018],
    [12.4211, 81.3274],
    [26.4051, 96.7818],
    [32.6242, 82.7694],
    [33.5034, 94.582],
    [33.0395, 92.4387],
    [10.8945, 86.3063],
    [14.579, 72.1056],
    [24.9574, 96.7317],
    [12.0431, 71.6562],
    [19.3527, 93.8766],
    [31.0662, 81.105],
    [36.6718, 76.7382],
    [19.4315, 85.617],
    [16.7072, 68.9801],
    [30.4633, 93.9153],
    [12.1268, 82.4106],
    [14.7416, 68.4457],
    [29.9539, 69.4576],
    [32.602, 88.7936],
    [19.9341, 74.3401],
    [27.0227, 81.6778],
    [14.0887, 75.7565],
    [10.1044, 95.4545],
    [17.1657, 83.881],
    [17.0936, 78.4059],
    [28.136, 82.3835],
    [9.5687, 80.5552],
    [9.7952, 85.0734],
    [35.4631, 76.6774],
    [27.1191, 76.317],
    [23.8042, 96.1443],
    [32.7553, 96.3937],
    [24.3256, 76.7836],
    [24.0665, 84.0766],
    [22.9495, 72.7788],
    [8.8234, 79.6357],
    [15.888, 91.3532],
]; 

function extractLayerValue(layers, property, depth) {
    const layer = layers[property];
    if (!layer || !layer.depths) return { mean: null, uncertainty: null };

    const depthLayer = layer.depths.find(d => d.range === depth);
    return {
        mean: depthLayer?.values?.mean ?? null,
        uncertainty: depthLayer?.values?.uncertainty ?? null,
    };
}

export async function GET() {
    const results = [];

    for (const [lat, lon] of coordinates) {
        try {
            const res = await fetch(`https://rest.isric.org/soilgrids/v2.0/properties/query?lon=${lon}&lat=${lat}`);
            const data = await res.json();
            const layers = data?.properties?.layers;

            if (!layers) {
                console.warn(`No layers for [${lat}, ${lon}]`);
                continue;
            }

            const oc = extractLayerValue(layers, 'ocd', '0-5cm');
            const ph = extractLayerValue(layers, 'phh2o', '0-5cm');
            const nitrogen = extractLayerValue(layers, 'nitrogen', '0-5cm');
            const sand = extractLayerValue(layers, 'sand', '0-5cm');
            const clay = extractLayerValue(layers, 'clay', '0-5cm');
            const silt = extractLayerValue(layers, 'silt', '0-5cm');

            results.push({
                lat,
                lon,
                organicCarbon: oc.mean,
                ph: ph.mean,
                nitrogen: nitrogen.mean,
                sand: sand.mean,
                clay: clay.mean,
                silt: silt.mean,
            });

        } catch (error) {
            console.error(`Error for [${lat}, ${lon}]:`, error.message);
        }
    }

    // Convert to CSV
    const parser = new Parser();
    const csv = parser.parse(results);

    // Optional: Save to local file
    await fs.writeFile('soil_data.csv', csv);

    return new NextResponse(csv, {
        headers: {
            'Content-Type': 'text/csv',
            'Content-Disposition': 'attachment; filename="soil_data.csv"',
        },
    });
}
